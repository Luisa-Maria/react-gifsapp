{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,cAEzB,EAAqCC,mBAAU,IAA/C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBD,OACK,sBAAMC,SAZW,SAACC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAQ,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAqBO,OACxCN,EAAe,MAOlB,SACA,uBACEO,KAAK,OACJC,MAAQT,EACRU,SAtBoB,SAACP,GAG3BF,EAAcE,EAAEQ,OAAOF,a,+BCNhBG,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACZC,EADY,iDACqCC,UAAWH,GADhD,+DAEOI,MAAOF,GAFd,cAEZG,EAFY,gBAGEA,EAAUC,OAHZ,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAM,CACFC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAcXM,GAdW,4CAAH,sDCANO,EAAc,SAAC,GAAgB,IAAdH,EAAa,EAAbA,MAAMV,EAAO,EAAPA,IAMhC,OACI,sBAAKc,UAAW,8CAAhB,UACQ,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,4BAAIA,QCPPO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECH0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OAVAC,qBAAU,WACRxB,EAAOC,GAAUwB,MAAK,SAACC,GAEnBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGd,CAACpB,IAEGqB,EDZ2BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACE,qCACE,oBAAIJ,UAAW,wCAAf,SAAwDhB,IACvDoB,GAAW,mBAAGJ,UAAU,wCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEcjBgB,EAzBM,WAEnB,MAAoCzC,mBAAS,CAAC,eAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG2C,EAAWnB,KAAI,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEAA,SAAWA,GADNA,YCjBb6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a6477dd0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n// import PropTypes from 'prop-types';\r\nexport const AddCategory = ( {setCategories}) =>{\r\n\r\n     const [inputValue, setInputValue ] = useState ('');\r\n\r\n      const handleInputChange = (e) =>{\r\n        //   console.log(e.targe)\r\n        \r\n      setInputValue(e.target.value);\r\n     }\r\n\r\n     const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        if(  inputValue.trim().length >2){\r\n            setCategories( cats =>[ inputValue , ...cats] );\r\n            setInputValue ('')\r\n        }\r\n\r\n        \r\n     }\r\n\r\n    return (\r\n         <form onSubmit={handleSubmit}>\r\n         <input \r\n           type=\"text\"\r\n            value ={inputValue} \r\n            onChange={handleInputChange}\r\n         />\r\n \r\n         </form>\r\n    )\r\n}\r\n// AddCategory.propTypes ={\r\n//     setCategories: PropTypes  .func.isRequired\r\n// }","\r\n\r\n\r\nexport const getGif = async ( category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=a4HJsaLSQcvfX12WWewVRe8DYNV0rngp`\r\n    const respuesta = await  fetch (url)\r\n    const {data}= await respuesta.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return{\r\n            id : img.id,\r\n            title: img.title,\r\n            url :img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n    return gifs;\r\n  \r\n    \r\n    \r\n\r\n}","import React from \"react\";\r\n\r\n\r\nexport const GifGridItem = ( {title,url})=>{\r\n\r\n\r\n// console.log(id,title,url);\r\n\r\n\r\n    return(\r\n        <div className =\"card animate__animated animate__rubberBand \"> \r\n                <img src={url} alt={ title } />\r\n                <p>{title}</p>\r\n\r\n\r\n\r\n        </div>\r\n        \r\n    )\r\n} ","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n// import { getGif } from '../helpers/getGifs';\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className =\"animate__animated animate__rubberBand\">{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__backInLeft\">Loading</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGif(category).then((imgs) => {\r\n        // console.log(imgs);\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  // const categories = ['kakegurui', 'dead note','parasyte'];\r\n  const [categories, setCategories] = useState([\"Death Note\"]);\r\n\r\n  // // const handleApp = () =>{\r\n  // // setCategories ([...categories , 'Tokyo Ghoul'])\r\n\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h2> GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map(category=> \r\n        <GifGrid \r\n        key={category}\r\n        category ={category}/>\r\n        )}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}